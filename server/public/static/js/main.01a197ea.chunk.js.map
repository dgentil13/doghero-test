{"version":3,"sources":["components/auth/service/auth-service.js","components/auth/signup/form/Form.jsx","components/auth/signup/SignUp.jsx","components/auth/login/form/Form.jsx","components/auth/login/Login.jsx","components/home/Home.jsx","components/pets/add-pet/Modal.jsx","components/pets/pet-info/Card.jsx","components/pets/Pets.jsx","components/navbar/Navbar.jsx","components/user/form/Form.jsx","components/user/Profile.jsx","components/walks/form/Form.jsx","components/walks/ScheduleWalk.jsx","components/footer/Footer.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["AuthService","service","axios","create","baseURL","process","withCredentials","this","email","password","number","fullName","address","role","post","then","response","data","get","Form","handleChange","handleSubmit","onSubmit","type","name","placeholder","onChange","SignUp","props","useState","inputs","setInputs","redirect","setRedirect","to","className","e","target","value","preventDefault","state","signup","res","getUser","catch","err","console","log","info","Login","login","Home","userIsLogged","pathname","src","alt","Modal","handleModal","dogInfo","onClick","race","age","size","additionalInfo","Card","delPet","gender","petId","_id","Pets","dogs","setDogs","modal","setModal","dogList","setDogList","useEffect","getDogs","delPets","delete","undefined","length","map","dog","idx","key","Navbar","handleRole","logout","userInfo","Profile","user","setUser","getUserInfo","put","activeHandler","walks","activeWalk","time","ScheduleWalk","setActiveWalk","duration","days","setWalks","editActive","filter","Footer","App","loggedInUser","setLoggedInUser","setRole","loggedin","getTheUser","userObj","exact","path","render","Boolean","window","location","hostname","match","require","config","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.01a197ea.chunk.js","sourcesContent":["import axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    let service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/api`,\n      withCredentials: true,\n    });\n    this.service = service;\n  }\n\n  signup(email, password, number, fullName, address, role) {\n    return this.service\n      .post('/signup', { email, password, number, fullName, address, role })\n      .then(response => response.data);\n  }\n\n  login(email, password) {\n    return this.service\n      .post('/login', { email, password })\n      .then(response => response.data);\n  }\n\n  loggedin() {\n    return this.service.get('/loggedin').then(response => response.data);\n  }\n\n  logout() {\n    return this.service.post('/logout', {}).then(response => response.data);\n  }\n}\n\nexport default AuthService;\n","import React, { Fragment } from 'react';\n\nconst Form = ({ handleChange, handleSubmit, role }) => {\n  return (\n    <Fragment>\n      {role === 'Walker' ? <h1> Be a Walker!</h1> : <h1>Join Us!</h1>}\n      <form onSubmit={handleSubmit}>\n        <input\n          type='text'\n          name='fullName'\n          placeholder='Please enter your Name.'\n          onChange={handleChange}\n        />\n        <input\n          type='email'\n          name='email'\n          placeholder='Please enter your Email.'\n          onChange={handleChange}\n        />\n\n        <input\n          type='password'\n          name='password'\n          placeholder='Please enter your Password.'\n          onChange={handleChange}\n        />\n        <input\n          type='text'\n          name='number'\n          placeholder='Please enter your Phone number.'\n          onChange={handleChange}\n        />\n        {role === 'Walker' ? (\n          <input\n            type='text'\n            name='address'\n            placeholder='Please enter your Address.'\n            onChange={handleChange}\n          />\n        ) : null}\n        <button type='submit'>Sign Up</button>\n      </form>\n    </Fragment>\n  );\n};\n\nexport default Form;\n","import React, { useState } from 'react';\nimport AuthService from '../service/auth-service';\nimport { Redirect } from 'react-router-dom';\n\n//components\nimport Form from './form/Form';\n\nconst SignUp = props => {\n  const service = new AuthService();\n  const [inputs, setInputs] = useState({\n    email: '',\n    password: '',\n    number: '',\n    fullName: '',\n    address: '',\n  });\n  const [redirect, setRedirect] = useState(false);\n\n  //Handle Submit from Signup\n  const submitHandler = e => {\n    e.preventDefault();\n    const { email, password, number, fullName, address } = inputs;\n    const role = props.state;\n    service\n      .signup(email, password, number, fullName, address, role)\n      .then(res => {\n        setInputs({\n          email: '',\n          password: '',\n          number: '',\n          fullName: '',\n          address: '',\n        });\n\n        setRedirect(true);\n        props.getUser(res);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  // Handle change of inputs\n  const changeHandler = e => {\n    const { name, value } = e.target;\n    setInputs({\n      ...inputs,\n      [name]: value,\n    });\n  };\n\n  //redirect Page after login\n  if (redirect) {\n    return <Redirect to='/'></Redirect>;\n  }\n  return (\n    <section className='auth'>\n      <div className='form-auth'>\n        <Form\n          handleChange={changeHandler}\n          handleSubmit={submitHandler}\n          role={props.state}\n        />\n      </div>\n    </section>\n  );\n};\n\nexport default SignUp;\n","import React, { Fragment } from 'react';\n\nconst Form = ({ handleChange, handleSubmit, info }) => {\n  return (\n    <Fragment>\n      <h1>Login</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          type='email'\n          name='email'\n          placeholder='Please enter your Email.'\n          onChange={handleChange}\n        />\n        <input\n          type='password'\n          name='password'\n          placeholder='Please enter your Password.'\n          onChange={handleChange}\n        />\n        <button type='submit'>Enter</button>\n      </form>\n    </Fragment>\n  );\n};\n\nexport default Form;\n","import React, { useState } from 'react';\nimport AuthService from '../service/auth-service';\nimport { Redirect } from 'react-router-dom';\n\n//components\nimport Form from './form/Form';\n\nconst Login = ({ getUser }) => {\n  const service = new AuthService();\n  const [inputs, setInputs] = useState({\n    email: '',\n    password: '',\n  });\n  const [redirect, setRedirect] = useState(false);\n\n  //Handle Submit from Signup\n  const submitHandler = e => {\n    e.preventDefault();\n    const { email, password } = inputs;\n\n    service\n      .login(email, password)\n      .then(res => {\n        setInputs({\n          email: '',\n          password: '',\n        });\n        setRedirect(true);\n        getUser(res);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  // Handle change of inputs\n  const changeHandler = e => {\n    const { name, value } = e.target;\n    setInputs({\n      ...inputs,\n      [name]: value,\n    });\n  };\n\n  //redirect Page after login\n  if (redirect) {\n    return <Redirect to='/'></Redirect>;\n  }\n  return (\n    <section className='auth'>\n      <div className='form-auth'>\n        <Form handleChange={changeHandler} handleSubmit={submitHandler} />\n      </div>\n    </section>\n  );\n};\n\nexport default Login;\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Home = ({ userIsLogged }) => {\n  return (\n    <Fragment>\n      <header className='front-header'>\n        <div className='main'>\n          <p>We walk while you work!</p>\n          {userIsLogged ? (\n            <button>\n              <Link\n                to={{\n                  pathname: '/walks',\n                }}\n              >\n                Let's Walk!\n              </Link>\n            </button>\n          ) : (\n            <button>\n              <Link\n                to={{\n                  pathname: '/signup',\n                }}\n              >\n                Try it out!\n              </Link>\n            </button>\n          )}\n        </div>\n      </header>\n      <section className='about'>\n        <div>\n          <img src='/images/paw.png' alt='Paw' />\n          <p>Take care of your four legged friend!</p>\n        </div>\n        <div>\n          <img src='/images/bone.png' alt='Bone' />\n          <p>Helps your dog to socialize! </p>\n        </div>\n        <div>\n          <img src='/images/colar.png' alt='Colar' />\n          <p>Trusted walkers to exercise your dog!</p>\n        </div>\n      </section>\n    </Fragment>\n  );\n};\n\nexport default Home;\n","import React, { Fragment } from 'react';\n\nconst Modal = ({ handleSubmit, handleChange, handleModal, dogInfo }) => {\n  console.log(dogInfo);\n  return (\n    <Fragment>\n      <form className='modal' onSubmit={e => handleSubmit(e)}>\n        <button className='close' onClick={handleModal}>\n          <img src='/images/times-solid.svg' alt='Close' />\n        </button>\n        <input\n          type='text'\n          name='name'\n          value={dogInfo.name}\n          placeholder='Name'\n          onChange={handleChange}\n        />\n        <br />\n        <input\n          type='text'\n          name='race'\n          value={dogInfo.race}\n          placeholder='Race'\n          onChange={handleChange}\n        />\n        <br />\n        <select name='gender' onChange={handleChange}>\n          <option>Gender</option>\n          <option value='Female'>Female</option>\n          <option value='Male'>Male</option>\n        </select>\n        <br />\n\n        <input\n          type='text'\n          name='age'\n          value={dogInfo.age}\n          placeholder='Age'\n          onChange={handleChange}\n        />\n        <br />\n        <input\n          type='text'\n          name='size'\n          value={dogInfo.size}\n          placeholder='Size, ex: Small'\n          onChange={handleChange}\n        />\n        <br />\n        <label>Additional Information:</label>\n        <textarea\n          type='text'\n          name='additionalInfo'\n          placeholder='Important information'\n          value={dogInfo.additionalInfo}\n          onChange={handleChange}\n        />\n        <br />\n\n        <button type='submit'>Add Pet</button>\n      </form>\n    </Fragment>\n  );\n};\n\nexport default Modal;\n","import React, { Fragment } from 'react';\n\nconst Card = ({ dogInfo, delPet }) => {\n  return (\n    <Fragment>\n      <section className='card'>\n        <div>\n          <div className='dog-card'>\n            {dogInfo.gender === 'Female' ? (\n              <img src='/images/dog-female.png' alt='female' />\n            ) : (\n              <img src='/images/dog-male.png' alt='male' />\n            )}\n            <h3>{dogInfo.name}</h3>\n          </div>\n          <p>{dogInfo.age}</p>\n          <p>{dogInfo.race}</p>\n        </div>\n        <button className='delete-pet' onClick={petId => delPet(dogInfo._id)}>\n          <img src='/images/trash.svg' alt='delete-card' />\n        </button>\n      </section>\n    </Fragment>\n  );\n};\n\nexport default Card;\n","import React, { useEffect, useState, Fragment } from 'react';\nimport axios from 'axios';\nimport Modal from './add-pet/Modal';\nimport Card from './pet-info/Card';\n\nconst Pets = ({ getUser }) => {\n  const [dogs, setDogs] = useState({\n    name: '',\n    gender: '',\n    race: '',\n    age: '',\n    size: '',\n    additionalInfo: '',\n  });\n  const [modal, setModal] = useState(false);\n  const [dogList, setDogList] = useState([]);\n\n  useEffect(() => {\n    getDogs();\n  }, [modal]);\n\n  // Get Dog List\n  const getDogs = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/dogs`, {\n        withCredentials: true,\n      })\n      .then(res => {\n        setDogList(res.data);\n      })\n      .catch(err => console.log(err));\n  };\n\n  // Delete Pet\n  const delPets = petId => {\n    axios\n      .delete(`${process.env.REACT_APP_API_URL}/del-pet/${petId}`, {\n        withCredentials: true,\n      })\n      .then(() => {\n        getDogs();\n      })\n      .catch(err => console.log(err));\n  };\n\n  // Displays Modal for Pet Creation\n  const handleModal = () => {\n    setModal(!modal);\n  };\n\n  // Handler form submit\n  const submitHandler = e => {\n    e.preventDefault();\n    const { name, gender, race, age, size, additionalInfo } = dogs;\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/add-pet`,\n        { name, gender, race, age, size, additionalInfo },\n        {\n          withCredentials: true,\n        },\n      )\n      .then(() => {\n        setDogs({\n          name: '',\n          gender: '',\n          race: '',\n          age: '',\n          size: '',\n          additionalInfo: '',\n        });\n      })\n      .catch(err => {\n        setDogs({\n          name: '',\n          gender: '',\n          race: '',\n          age: '',\n          size: '',\n          additionalInfo: '',\n        });\n      });\n    getDogs();\n    handleModal();\n  };\n\n  // Handles input change\n  const changeHandler = e => {\n    const { name, value } = e.target;\n    setDogs({\n      ...dogs,\n      [name]: value,\n    });\n  };\n\n  return (\n    <Fragment>\n      <section className='pets'>\n        {modal ? (\n          <Modal\n            handleModal={handleModal}\n            handleSubmit={submitHandler}\n            handleChange={changeHandler}\n            dogInfo={dogs}\n          />\n        ) : null}\n        <div className='main-content'>\n          <div className='header-pets'>\n            <h1> My Pets</h1>\n            <button onClick={handleModal}>\n              <img src='/images/plus-solid.svg' alt='Add' />\n            </button>\n          </div>\n          {dogList === null || dogList === undefined ? (\n            <p> Loading ... </p>\n          ) : dogList.length > 0 ? (\n            <div className='card-box'>\n              {dogList.map((dog, idx) => {\n                return <Card key={idx} dogInfo={dog} delPet={delPets} />;\n              })}\n            </div>\n          ) : (\n            <p className='no-dog'>You have no Pets yet! </p>\n          )}\n        </div>\n      </section>\n    </Fragment>\n  );\n};\n\nexport default Pets;\n","import { Link } from 'react-router-dom';\nimport React from 'react';\n\nimport AuthService from '../auth/service/auth-service';\n\nconst Navbar = ({ userIsLogged, handleRole, getUser }) => {\n  const service = new AuthService();\n\n  //Logout\n  const logoutUser = () => {\n    service.logout().then(() => {\n      getUser(null);\n    });\n  };\n\n  if (userIsLogged) {\n    return (\n      <nav>\n        <div className='logo'>\n          <h4>\n            <Link\n              to={{\n                pathname: '/',\n              }}\n            >\n              PupLove\n            </Link>\n          </h4>\n        </div>\n        <ul>\n          <li>\n            <Link\n              to={{\n                pathname: '/walks',\n              }}\n            >\n              Schedule Walk\n            </Link>\n          </li>\n          <li>\n            <Link\n              to={{\n                pathname: '/profile',\n              }}\n            >\n              Profile\n            </Link>\n          </li>\n          <li>\n            <Link\n              to={{\n                pathname: '/pets',\n              }}\n            >\n              Pets\n            </Link>\n          </li>\n          <li>\n            <Link to='/' onClick={logoutUser}>\n              Logout\n            </Link>\n          </li>\n        </ul>\n      </nav>\n    );\n  } else {\n    return (\n      <nav>\n        <div className='logo'>\n          <h4>\n            <Link\n              to={{\n                pathname: '/',\n              }}\n            >\n              PupLove\n            </Link>\n          </h4>\n        </div>\n        <ul>\n          <li>\n            <Link\n              to={{\n                pathname: '/signup',\n              }}\n              onClick={role => handleRole('Walker')}\n            >\n              Be a Walker!\n            </Link>\n          </li>\n          <li>\n            <Link\n              to={{\n                pathname: '/signup',\n              }}\n              onClick={role => handleRole('Client')}\n            >\n              SignUp\n            </Link>\n          </li>\n\n          <li>\n            <Link\n              to={{\n                pathname: '/login',\n              }}\n            >\n              LogIn\n            </Link>\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n};\n\nexport default Navbar;\n","import React, { Fragment } from 'react';\n\nconst Form = ({ handleSubmit, handleChange, userInfo }) => {\n  return (\n    <Fragment>\n      <form onSubmit={e => handleSubmit(e)}>\n        <label>Name:</label>\n        <input\n          type='text'\n          name='fullName'\n          value={userInfo.fullName}\n          placeholder='Name'\n          onChange={handleChange}\n        />\n        <br />\n        <label>Address:</label>\n        <input\n          type='text'\n          name='address'\n          value={userInfo.address}\n          placeholder='Address'\n          onChange={handleChange}\n        />\n        <br />\n        <label>Number:</label>\n        <input\n          type='text'\n          name='number'\n          value={userInfo.number}\n          placeholder='Number'\n          onChange={handleChange}\n        />\n        <br />\n\n        <button type='submit'>Edit Profile</button>\n      </form>\n    </Fragment>\n  );\n};\n\nexport default Form;\n","import React, { useEffect, useState, Fragment } from 'react';\nimport axios from 'axios';\nimport Form from './form/Form';\n\nconst Profile = ({ getUser }) => {\n  const [user, setUser] = useState({\n    fullName: '',\n    address: '',\n    number: '',\n  });\n\n  useEffect(() => {\n    getUserInfo();\n  }, []);\n\n  // Gets Users Data\n  const getUserInfo = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/user`, {\n        withCredentials: true,\n      })\n      .then(res => {\n        setUser(res.data);\n      })\n      .catch(err => console.log(err));\n  };\n\n  // handles form edition submit\n  const submitHandler = e => {\n    e.preventDefault();\n    const { fullName, address, number } = user;\n    axios\n      .put(\n        `${process.env.REACT_APP_API_URL}/user-edit`,\n        { fullName, address, number },\n        {\n          withCredentials: true,\n        },\n      )\n      .then(() => {\n        getUserInfo();\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  // Handles input changes\n  const changeHandler = e => {\n    const { name, value } = e.target;\n    setUser({\n      ...user,\n      [name]: value,\n    });\n  };\n\n  return (\n    <Fragment>\n      <section className='profile'>\n        <div>\n          <h1> My Profile</h1>\n          <Form\n            handleSubmit={submitHandler}\n            handleChange={changeHandler}\n            userInfo={user}\n          />\n        </div>\n      </section>\n    </Fragment>\n  );\n};\n\nexport default Profile;\n","import React, { Fragment } from 'react';\n\nconst Form = ({ handleChange, handleSubmit, activeHandler, dogs, walks }) => {\n  return (\n    <Fragment>\n      <form onSubmit={handleSubmit}>\n        <input\n          type='text'\n          name='address'\n          value={walks.address}\n          placeholder='Please enter your address.'\n          onChange={handleChange}\n        />\n        <h4> Who's going on the walk?</h4>\n        <div className='box-walk'>\n          {dogs === undefined || dogs === undefined ? (\n            <p> Loading...</p>\n          ) : dogs.length > 0 ? (\n            dogs.map((dog, idx) => {\n              return (\n                <div key={idx} className='card-walk'>\n                  {dog.name}\n                  <button\n                    className='active-pet'\n                    onClick={e => activeHandler(e, dog._id)}\n                  >\n                    {dog.activeWalk ? (\n                      <img src='/images/leash.svg' alt='Leash full' />\n                    ) : (\n                      <img src='/images/leash-empty.svg' alt='Leash empty' />\n                    )}\n                  </button>\n                </div>\n              );\n            })\n          ) : (\n            <p className='no-dog'> Add a Pet in you Pets page!</p>\n          )}\n        </div>\n\n        <select name='duration' onChange={handleChange}>\n          <option>Duration</option>\n          <option value='30 min.'>30 min.</option>\n          <option value='1 hour'>1 hour</option>\n        </select>\n\n        <select name='days' onChange={handleChange}>\n          <option>Day of the Week</option>\n          <option value='Monday'>Monday</option>\n          <option value='Tuesday'>Tuesday</option>\n          <option value='Wednesday'>Wednesday</option>\n          <option value='Thrusday'>Thrusday</option>\n          <option value='Friday'>Friday</option>\n          <option value='Saturday'>Saturday</option>\n          <option value='Sunday'>Sunday</option>\n        </select>\n\n        <input\n          type='text'\n          name='time'\n          value={walks.time}\n          placeholder='Please enter the time. ex: 10am'\n          onChange={handleChange}\n        />\n\n        <button type='submit'>Walk!</button>\n      </form>\n    </Fragment>\n  );\n};\n\nexport default Form;\n","import React, { useEffect, useState, Fragment } from 'react';\nimport axios from 'axios';\nimport Form from './form/Form';\n\nconst ScheduleWalk = () => {\n  const [activeWalk, setActiveWalk] = useState(true);\n  const [dogList, setDogList] = useState([]);\n  const [walks, setWalks] = useState({\n    duration: '',\n    address: '',\n    days: '',\n    time: '',\n  });\n\n  useEffect(() => {\n    getDogs();\n  }, [activeWalk]);\n\n  // Get Dog List\n  const getDogs = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/dogs`, {\n        withCredentials: true,\n      })\n      .then(res => {\n        setDogList(res.data);\n      })\n      .catch(err => console.log(err));\n  };\n\n  // Edit Dog\n  const editActive = petId => {\n    axios\n      .put(\n        `${process.env.REACT_APP_API_URL}/active/${petId}`,\n        { activeWalk },\n        {\n          withCredentials: true,\n        },\n      )\n      .then(() => {})\n      .catch(err => {\n        console.log(err);\n      });\n    getDogs();\n  };\n\n  // Change Active Walk status\n  const activeHandler = (e, petId) => {\n    e.preventDefault();\n    setActiveWalk(!activeWalk);\n    editActive(petId);\n  };\n\n  // Handler form submit\n  const submitHandler = e => {\n    e.preventDefault();\n    const { duration, days, time, address } = walks;\n    const dogs = dogList.filter(dog => {\n      return dog.activeWalk === true;\n    });\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/create-walk`,\n        { duration, days, time, address, dogs },\n        {\n          withCredentials: true,\n        },\n      )\n      .then(() => {\n        setWalks({\n          duration: '',\n          address: '',\n          days: '',\n          time: '',\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n    getDogs();\n  };\n\n  // Handles input change\n  const changeHandler = e => {\n    const { name, value } = e.target;\n    setWalks({\n      ...walks,\n      [name]: value,\n    });\n  };\n  return (\n    <Fragment>\n      <section className='walks'>\n        <div className='main-walk'>\n          <h1> Let's take a walk!</h1>\n          <Form\n            dogs={dogList}\n            walks={walks}\n            activeHandler={activeHandler}\n            handleSubmit={submitHandler}\n            handleChange={changeHandler}\n          />\n        </div>\n      </section>\n    </Fragment>\n  );\n};\n\nexport default ScheduleWalk;\n","import React from 'react';\n\nconst Footer = () => {\n  return (\n    <footer>\n      <div className='madeby'>\n        <p> Made by Daniela Gentil</p>\n      </div>\n\n      <div className='challenge'>\n        <p> DogHero Challenge - 2019</p>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport { Switch, Route } from 'react-router-dom';\nimport AuthService from './components/auth/service/auth-service';\n\n// components\nimport SignUp from './components/auth/signup/SignUp';\nimport Login from './components/auth/login/Login';\nimport Home from './components/home/Home';\nimport Pets from './components/pets/Pets';\nimport Navbar from './components/navbar/Navbar';\nimport Profile from './components/user/Profile';\nimport ScheduleWalk from './components/walks/ScheduleWalk';\nimport Footer from './components/footer/Footer';\n\nconst App = () => {\n  const service = new AuthService();\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  const [role, setRole] = useState('');\n\n  useEffect(() => {\n    if (loggedInUser === null) {\n      service\n        .loggedin()\n        .then(res => {\n          setLoggedInUser(res);\n        })\n        .catch(err => {\n          setLoggedInUser(false);\n        });\n    }\n  }, [loggedInUser]);\n\n  const getTheUser = userObj => {\n    setLoggedInUser(userObj);\n  };\n\n  const handleRole = role => {\n    setRole(role);\n  };\n\n  //Routes for logged in user\n  if (loggedInUser) {\n    return (\n      <div className='App'>\n        <Navbar\n          getUser={getTheUser}\n          state={role}\n          handleRole={handleRole}\n          userIsLogged={loggedInUser}\n        />\n        <Switch>\n          <Route\n            exact\n            path='/'\n            render={() => <Home userIsLogged={loggedInUser} />}\n          />\n          <Route\n            exact\n            path='/pets'\n            render={() => <Pets getUser={getTheUser} />}\n          />\n          <Route\n            exact\n            path='/profile'\n            render={() => <Profile getUser={getTheUser} />}\n          />\n          <Route\n            exact\n            path='/walks'\n            render={() => <ScheduleWalk getUser={getTheUser} />}\n          />\n        </Switch>\n\n        <Footer />\n      </div>\n    );\n  } else {\n    //Routes for logged off user\n    return (\n      <div className='App'>\n        <Navbar\n          getUser={getTheUser}\n          state={role}\n          handleRole={handleRole}\n          userIsLogged={loggedInUser}\n        />\n        <Switch>\n          <Route\n            exact\n            path='/signup'\n            render={() => <SignUp getUser={getTheUser} state={role} />}\n          />\n          <Route\n            exact\n            path='/login'\n            render={() => <Login getUser={getTheUser} />}\n          />\n          <Route exact path='/' render={() => <Home getUser={getTheUser} />} />\n        </Switch>\n        <Footer />\n      </div>\n    );\n  }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nrequire('dotenv').config();\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}